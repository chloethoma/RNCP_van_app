name: ðŸš€ Build & Deploy to Raspberry Pi (Self-hosted)

on:
  push:
    branches:
      - main
  workflow_dispatch: ~
  pull_request: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    name: Build & Deploy on Raspberry Pi
    runs-on: [self-hosted]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set BRANCH variable
        run: |
          if [[ "${GITHUB_REF}" == refs/pull/* ]]; then
          echo "BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          else
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi

      - name: Update repository
        run: |
          git fetch origin
          git checkout $BRANCH
          git reset --hard origin/$BRANCH

      - name: Set up .env.prod
        run: |
          cat > .env.prod <<EOF
          APP_ENV=prod
          APP_SECRET=${{ secrets.APP_SECRET_PROD }}

          ### DATABASE environment variables ###
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}

          ### BACKEND environment variables ###
          CORS_ALLOW_ORIGIN=${{ secrets.CORS_ALLOW_ORIGIN }}
          CADDY_MERCURE_JWT_SECRET=${{ secrets.CADDY_MERCURE_JWT_SECRET }}
          JWT_SECRET_KEY=${{ vars.JWT_SECRET_KEY }}
          JWT_PUBLIC_KEY=${{ vars.JWT_PUBLIC_KEY }}
          JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}
          MAILER_DSN=${{ secrets.MAILER_DSN_PROD }}
          MAILER_FROM_ADDRESS=${{ secrets.MAILER_FROM_ADDRESS }}
          SERVER_NAME=${{ vars.SERVER_NAME }}
          SERVER_NAME_FRONT=${{ vars.SERVER_NAME_FRONT }}
          FRONT_PORT=${{ vars.FRONT_PORT }}
          FRONTEND_URL=${{ vars.FRONTEND_URL }}

          ### FRONTEND environment variables ###
          VITE_MAPBOX_TOKEN=${{ secrets.VITE_MAPBOX_TOKEN }}
          VITE_API_URL=${{ vars.VITE_API_URL }}
          EOF

      - name: Set up frontend env
        run: |
          cat > frontend/.env <<EOF
          VITE_MAPBOX_TOKEN=${{ secrets.VITE_MAPBOX_TOKEN }}
          VITE_API_URL=${{ vars.VITE_API_URL }}
          EOF

      - name: Pull latest Docker images
        run: sudo docker compose --env-file .env.prod -f compose.yaml -f compose.prod.yaml build

      - name: Restart Docker services
        run: sudo docker compose --env-file .env.prod -f compose.yaml -f compose.prod.yaml up -d

      - name: Generate JWT keys if needed
        run: sudo docker exec -i php php bin/console lexik:jwt:generate-keypair --skip-if-exists

      - name: Show running containers
        run: sudo docker ps
