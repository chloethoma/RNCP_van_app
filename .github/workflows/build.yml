name: ðŸ“¦ CI Build

on:
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (production mode)
    runs-on: ubuntu-latest
    env:
      # Base environment variables
      APP_ENV: prod
      APP_SECRET: ${{ secrets.APP_SECRET_PROD }}
      APP_DEBUG: 0
      # DATABASE environment variables
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      # BACKEND environment variables
      CADDY_MERCURE_JWT_SECRET: ${{ secrets.CADDY_MERCURE_JWT_SECRET }}
      CORS_ALLOW_ORIGIN: ${{ secrets.CORS_ALLOW_ORIGIN }}
      JWT_SECRET_KEY: ${{ vars.JWT_SECRET_KEY }}
      JWT_PUBLIC_KEY: ${{ vars.JWT_PUBLIC_KEY }}
      JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
      MAILER_DSN: ${{ secrets.MAILER_DSN_PROD }}
      MAILER_FROM_ADDRESS: ${{ secrets.MAILER_FROM_ADDRESS }}
      FRONTEND_URL: ${{ vars.FRONTEND_URL_PROD }}
      SERVER_NAME: ${{ vars.SERVER_NAME }}
      SERVER_NAME_FRONT: ${{ vars.SERVER_NAME_FRONT }}
      FRONT_PORT: ${{ vars.FRONT_PORT }}
      # FRONTEND environment variables
      VITE_MAPBOX_TOKEN: ${{ secrets.VITE_MAPBOX_TOKEN }}
      VITE_API_URL: ${{ vars.VITE_API_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.prod.yaml
          set: |
            *.cache-from=type=gha,scope=${{ github.ref }}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{ github.ref }},mode=max
